% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pauli_Clifford.R
\name{pauli_pow_combination}
\alias{pauli_pow_combination}
\title{pow_pauli_combination}
\usage{
pauli_pow_combination(ai, ax, ay, az, exponent)
}
\arguments{
\item{ai}{ai}

\item{ax}{ax}

\item{ay}{ay}

\item{az}{az}

\item{exponent}{exponent}
}
\value{
Returns scalar coefficients bi, bx, by, bz such that
bi I + bx X + by Y + bz Z = (ai I + ax X + ay Y + az Z)^exponent
Correctness of the formulas below follows from the binomial expansion
and the fact that for any real or complex vector (ax, ay, az) and any
non-negative integer k: [ax X + ay Y + az Z]^(2k) = (ax^2 + ay^2 + az^2)^k I
}
\description{
Computes non-negative integer power of single-qubit Pauli combination.
}
\seealso{
Other Pauli and Clifford groups: 
\code{\link{clifford_state}()},
\code{\link{clifford_tableau}()},
\code{\link{pauli_base_dense_string}()},
\code{\link{pauli_basis}()},
\code{\link{pauli_dense_string}()},
\code{\link{pauli_gate_like}()},
\code{\link{pauli_interaction_gate}()},
\code{\link{pauli_mutable_dense_string}()},
\code{\link{pauli}()}
}
\concept{Pauli and Clifford groups}
