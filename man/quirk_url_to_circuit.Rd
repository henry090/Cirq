% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Importing_Exporting.R
\name{quirk_url_to_circuit}
\alias{quirk_url_to_circuit}
\title{Quirk url to circuit}
\usage{
quirk_url_to_circuit(quirk_url, qubits, extra_cell_makers, max_operation_count)
}
\arguments{
\item{quirk_url}{The URL of a bookmarked Quirk circuit. It is not
required that the domain be "algassert.com/quirk". The only important
part of the URL is the fragment (the part after the #).}

\item{qubits}{Qubits to use in the circuit. The length of the list
must be at least the number of qubits in the Quirk circuit
(including unused qubits). The maximum number of qubits in a
Quirk circuit is 16. This argument defaults to line_qubit_range(16)
when not specified.}

\item{extra_cell_makers}{Non-standard Quirk cells to accept.
This can be used to parse URLs that come from a modified version of
Quirk that includes gates that Quirk doesn’t define. This can be
specified as either a list of cirq.interop.quirk.cells.CellMaker
instances, or for more simple cases as a dictionary from
a Quirk id string to a cirq Gate.}

\item{max_operation_count}{If the number of operations in the circuit
would exceed this value, the method raises a ValueError instead of
attempting to construct the circuit. This is important to specify
for servers parsing unknown input, because Quirk’s format allows
for a billion laughs attack in the form of nested custom gates.}
}
\value{
The parsed circuit.
}
\description{
Parses a Cirq circuit out of a Quirk URL.
}
\section{Raises}{

ValueError: Invalid circuit URL, or circuit would be larger than `max_operations_count`.
}

\seealso{
Other Importing and Exporting: 
\code{\link{quirk_json_to_circuit}()}
}
\concept{Importing and Exporting}
