% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling_simulations.R
\name{measure_state_vector}
\alias{measure_state_vector}
\title{Measure state vector}
\usage{
measure_state_vector(state, indices, ...)
}
\arguments{
\item{state}{The state to be measured. This state is assumed to be normalized.
The state must be of size 2 `**` integer. The state can be of
shape `(2 ** integer)` or (2, 2, ..., 2).}

\item{indices}{Which qubits are measured. The state is assumed to be
supplied in big endian order. That is the xth index of v, when expressed
as a bitstring, has the largest values in the 0th index.}

\item{...}{additional parameters to pass.}
}
\value{
A list of a list and an numpy array. The list is an array of booleans
corresponding to the measurement values (ordered by the indices). The numpy array
is the post measurement state. This state has the same shape and dtype as the input state.
}
\description{
Performs a measurement of the state in the computational basis.
}
\details{
This does not modify `state` unless the optional `out` is `state`.
}
\section{Raises}{

ValueError if the size of state is not a power of 2.
IndexError if the indices are out of range for the number
of qubits corresponding to the state.
}

\seealso{
Other Sampling, Simulations and Data collection: 
\code{\link{big_endian_bits_to_int}()},
\code{\link{big_endian_digits_to_int}()},
\code{\link{big_endian_int_to_bits}()},
\code{\link{big_endian_int_to_digits}()},
\code{\link{circuit_like}()},
\code{\link{final_density_matrix}()},
\code{\link{final_wavefunction}()},
\code{\link{flatten_to_ops_or_moments}()},
\code{\link{flatten_to_ops}()},
\code{\link{flatten_with_params}()},
\code{\link{flatten_with_sweep}()},
\code{\link{flatten}()},
\code{\link{hog_score_xeb_fidelity_from_probabilities}()},
\code{\link{measure_density_matrix}()},
\code{\link{random_state_or_seed_like}()},
\code{\link{sample_density_matrix}()},
\code{\link{sample_state_vector}()},
\code{\link{sample_sweep}()},
\code{\link{sample}()},
\code{\link{to_resolvers}()}
}
\concept{Sampling, Simulations and Data collection}
