% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling_simulations.R
\name{measure_density_matrix}
\alias{measure_density_matrix}
\title{Measure density matrix}
\usage{
measure_density_matrix(
  density_matrix,
  indices,
  qid_shape = NULL,
  out = NULL,
  seed = NULL
)
}
\arguments{
\item{density_matrix}{The density matrix to be measured. This matrix is
assumed to be positive semidefinite and trace one. The matrix is assumed
to be of shape `(2 ** integer, 2 ** integer)` or `(2, 2, ..., 2)`.}

\item{indices}{Which qubits are measured. The matrix is assumed to be
supplied in big endian order. That is the xth index of v, when expressed
as a bitstring, has the largest values in the 0th index.}

\item{qid_shape}{The qid shape of the density matrix. Specify this argument
when using qudits.}

\item{out}{An optional place to store the result. If `out` is the same as
the `density_matrix` parameter, then `density_matrix` will be modified inline.
If `out` is not NULL, then the result is put into `out`. If `out` is NULL a new
value will be allocated. In all of these cases `out` will be the same as the
returned ndarray of the method. The shape and dtype of `out` will match that
of `density_matrix` if `out` is NULL, otherwise it will match the shape and dtype of `out`.}

\item{seed}{A seed for the pseudorandom number generator.}
}
\value{
A list of a list and an numpy array. The list is an array of booleans
corresponding to the measurement values (ordered by the indices). The numpy array
is the post measurement matrix. This matrix has the same shape and dtype as the input matrix.
}
\description{
Performs a measurement of the density matrix in the computational basis.
}
\details{
This does not modify `density_matrix` unless the optional `out` is
`density_matrix`.
}
\section{Raises}{

ValueError if the dimension of the matrix is not compatible with a matrix of n qubits. IndexError if the indices are out of range for the number of qubits corresponding to the density matrix.
}

\seealso{
Other Sampling, Simulations and Data collection: 
\code{\link{big_endian_bits_to_int}()},
\code{\link{big_endian_digits_to_int}()},
\code{\link{big_endian_int_to_bits}()},
\code{\link{big_endian_int_to_digits}()},
\code{\link{circuit_like}()},
\code{\link{final_density_matrix}()},
\code{\link{final_wavefunction}()},
\code{\link{flatten_to_ops_or_moments}()},
\code{\link{flatten_to_ops}()},
\code{\link{flatten_with_params}()},
\code{\link{flatten_with_sweep}()},
\code{\link{flatten}()},
\code{\link{hog_score_xeb_fidelity_from_probabilities}()},
\code{\link{measure_state_vector}()},
\code{\link{random_state_or_seed_like}()},
\code{\link{sample_density_matrix}()},
\code{\link{sample_state_vector}()},
\code{\link{sample_sweep}()},
\code{\link{sample}()},
\code{\link{to_resolvers}()}
}
\concept{Sampling, Simulations and Data collection}
