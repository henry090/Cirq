% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Unitary_Gates.R
\name{gate_cx_pow}
\alias{gate_cx_pow}
\title{CXPowGate}
\usage{
gate_cx_pow(...)
}
\arguments{
\item{...}{parameters to pass}
}
\value{
None
}
\description{
A gate that applies a controlled power of an X gate.
}
\details{
When applying CNOT (controlled-not) to qubits, you can either use
positional arguments `CNOT(q1, q2)`, where q2 is toggled when q1 is on,
or named arguments `CNOT(control=q1, target=q2)`.
(Mixing the two is not permitted.)
}
\seealso{
Other Unitary gates and operations: 
\code{\link{gate_ccnot_pow}()},
\code{\link{gate_ccnot}()},
\code{\link{gate_ccx_pow}()},
\code{\link{gate_ccx}()},
\code{\link{gate_ccz_pow}()},
\code{\link{gate_ccz}()},
\code{\link{gate_cnot_pow}()},
\code{\link{gate_cnot}()},
\code{\link{gate_controlled}()},
\code{\link{gate_cs_wap}()},
\code{\link{gate_cx}()},
\code{\link{gate_cz_pow}()},
\code{\link{gate_cz}()},
\code{\link{gate_eigen}()},
\code{\link{gate_fredkin}()},
\code{\link{gate_givens}()},
\code{\link{gate_h}()},
\code{\link{gate_identity_each}()},
\code{\link{gate_iswap}()},
\code{\link{gate_i}()},
\code{\link{gate_riswap}()},
\code{\link{gate_rx}()},
\code{\link{gate_ry}()},
\code{\link{gate_swap}()},
\code{\link{gate_s}()},
\code{\link{gate_toffoli}()},
\code{\link{gate_t}()},
\code{\link{gate_xx}()},
\code{\link{gate_x}()},
\code{\link{gate_yy}()},
\code{\link{gate_y}()},
\code{\link{gate_zz}()},
\code{\link{gate_z}()}
}
\concept{Unitary gates and operations}
